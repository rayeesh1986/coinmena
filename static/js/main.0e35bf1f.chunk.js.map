{"version":3,"sources":["header/Header.js","header/Navbar.js","repos/Repolist.js","config/AppUrl.js","utils/Loading.js","repos/Repos.js","notfound/Notfound.js","developers/Developerslist.js","developers/Developers.js","App.js","reportWebVitals.js","index.js"],"names":["Header","title","discription","className","Navbarcon","to","Repolist","listingData","map","data","id","rank","href","url","target","rel","repositoryName","description","language","totalStars","forks","builtBy","length","iconData","src","avatar","alt","uniqid","starsSince","API_BASE_URL","AppUrl","REPO_LISTING_URL","DEVELOPER_LISTING_URL","Loading","Repos","useState","devapi","dev","setDev","loading","setLoading","useEffect","devApiData","a","fetch","then","resp","json","catch","error","console","log","response","Navbar","Notfound","Developerslist","style","background","name","username","popularRepository","Developers","Promise","resolve","reject","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e35bf1f.chunk.js","sourcesContent":["import React from 'react';\r\nconst Header = ({ title, discription }) => {\r\n    return (\r\n        <div className=\"col_full center-text top_sec\">\r\n            <h1>{title}</h1>\r\n            <p>{discription}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nconst Navbarcon = () => {\r\n    return (\r\n        <div className=\"con_strip\">\r\n            <div className=\"\">\r\n                <ul className=\"link_con\">\r\n                    <li>\r\n                        <NavLink to=\"/repos\">Repositories</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/developers\">Developers</NavLink>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbarcon;","import React from 'react';\r\nimport uniqid from 'uniqid';\r\nconst Repolist = ({ listingData }) => {\r\n    return (\r\n        <div className=\"\">\r\n            <table className=\"table\">\r\n                <tbody>\r\n                    {listingData.map((data) =>\r\n                        <tr id={data.rank} key={data.rank}>\r\n                            <td>\r\n                                <div className=\"repo_s_con\">\r\n                                    <div className=\"user_detail repoContainer\">\r\n                                        <div className=\"user_d_inner\">\r\n                                            <h6><a href={data.url} target=\"_blank\" rel=\"noreferrer\">{data.repositoryName}</a></h6>\r\n                                            <span>{data.description}</span>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"btn_m_con\">\r\n                                        <a href=\"/\" target=\"_blank\" rel=\"noreferrer\" className=\"btn_con\"><i className=\"p_heart icon_data\"></i>Sponsor</a>\r\n                                        <a href={data.url} target=\"_blank\" rel=\"noreferrer\" className=\"btn_con\"><i className=\"p_heart_white icon_data\"></i>Star</a>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col_f_con\">\r\n                                    <div className=\"p_left_con\">\r\n                                        <ul>\r\n                                            {data.language !== null && data.language !== \"\" && <li>{data.language}</li>}\r\n                                            <li><div className=\"p_con\">\r\n                                                <p><i className=\"p_star_white icon_data\"></i> {data.totalStars}</p>\r\n                                            </div></li>\r\n                                            <li><div className=\"p_con\">\r\n                                                <p><i className=\"p_fork_white icon_data\"></i> {data.forks}</p>\r\n                                            </div></li>\r\n\r\n                                            <li>Build by :{data.builtBy.length !== 0 && data.builtBy.map((iconData) =>\r\n                                                <span className=\"avatar_img\" key={uniqid()}><img src={iconData.avatar} alt=\"\" /></span>\r\n                                            )}\r\n                                            </li>\r\n                                        </ul>\r\n                                    </div>\r\n                                    <div className=\"p_con\">\r\n                                        <p><i className=\"p_star_white icon_data\"></i> {data.starsSince} Stars Today</p>\r\n                                    </div>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Repolist;","let BASE_URL;\r\n\r\nBASE_URL = \"https://cors-anywhere.herokuapp.com/https://gh-trending-api.herokuapp.com\";\r\n\r\nconst API_BASE_URL = `${BASE_URL}`;\r\n\r\nconst AppUrl = {\r\n    REPO_LISTING_URL: API_BASE_URL + \"/repositories\",\r\n    DEVELOPER_LISTING_URL: API_BASE_URL + \"/developers\",\r\n};\r\n\r\nexport default AppUrl;","import React from 'react';\r\nconst Loading = () => {\r\n    return (\r\n        <div className=\"loading_data\">\r\n            <h2>Loading...</h2>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loading;","import React, { useEffect, useState } from 'react';\r\nimport Header from '../header/Header';\r\nimport Navbarcon from '../header/Navbar';\r\n//import repoApi from '../assets/reopapi';\r\nimport Repolist from './Repolist';\r\nimport AppUrl from '../config/AppUrl';\r\nimport Loading from '../utils/Loading';\r\nconst Repos = () => {\r\n\r\n    const [dev, setDev] = useState({ devapi: [] });\r\n    const [loading, setLoading] = useState(false);\r\n    const { devapi: listingData } = dev;\r\n\r\n    useEffect(() => {\r\n        devApiData();\r\n    }, [])\r\n\r\n    const devApiData = async () => {\r\n        setLoading(true)\r\n        const response = await fetch(`${AppUrl.REPO_LISTING_URL}`)\r\n            .then(resp => resp.json())\r\n            .then(data => {\r\n                setDev({ devapi: data })\r\n                setLoading(false)\r\n            })\r\n            .catch(error => console.log(\"Error:\" + error));\r\n\r\n        return response;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header\r\n                title=\"Trending\"\r\n                discription=\"See what the GitHub community is most excited Today.\" />\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col_full\">\r\n                        <div className=\"con_outer\">\r\n                            <Navbarcon />\r\n                            {/* Repos listing section start here */}\r\n                            {loading ? <Loading /> : <Repolist listingData={listingData} />}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Repos;","import React from 'react';\r\n\r\nconst Notfound = () => {\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col_full\">\r\n                        <div className=\"not_found_container\">\r\n                            <h1>Page Not Found</h1>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Notfound;","import React from 'react';\r\nconst Developerslist = ({ listingData }) => {\r\n    console.log(listingData)\r\n    return (\r\n        <div className=\"\">\r\n            <table className=\"table\">\r\n                <tbody>\r\n                    {listingData.map((data) =>\r\n                        <tr id={data.rank} key={data.rank}>\r\n                            <td>{data.rank}</td>\r\n                            <td>\r\n                                <div className=\"user_detail\">\r\n                                    <a href={data.url} target=\"_blank\" className=\"user_avatar\" style={{ background: `url(${data.avatar})` }} rel=\"noreferrer\">\r\n                                    </a>\r\n                                    <div className=\"user_d_inner\">\r\n                                        <h6><a href={data.url} target=\"_blank\" rel=\"noreferrer\">{data.name}</a></h6>\r\n                                        <span>{data.username}</span>\r\n                                    </div>\r\n                                </div>\r\n                            </td>\r\n                            <td>\r\n                                <p className=\"repo_title\"><i className=\"p_fire icon_data\"></i> POPULAR REPO</p>\r\n                                {data.popularRepository.repositoryName !== \"\" && data.popularRepository.repositoryName !== null && <a href={data.popularRepository.url} target=\"_blank\" rel=\"noreferrer\" className=\"repo_name\"><i className=\"p_repo icon_data\"></i> {data.popularRepository.repositoryName}</a>\r\n                                }\r\n                                {data.popularRepository.description !== \"\" && data.popularRepository.description !== null && <p className=\"repo_description\">{data?.popularRepository?.description}</p>\r\n                                }\r\n                            </td>\r\n                            <td>\r\n                                <div className=\"btn_m_con\">\r\n                                    <a href={`https://github.com/sponsors/${data.username}`} target=\"_blank\" rel=\"noreferrer\" className=\"btn_con\"><i className=\"p_heart icon_data\"></i>Sponsor</a>\r\n                                    <a href=\"/\" target=\"_blank\" rel=\"noreferrer\" className=\"btn_con\">Follow</a>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Developerslist;","import React, { useEffect, useState } from 'react';\r\nimport Header from '../header/Header';\r\n//import apiData from '../assets/api'\r\nimport Developerslist from './Developerslist';\r\nimport Navbarcon from '../header/Navbar';\r\nimport AppUrl from '../config/AppUrl';\r\nimport Loading from '../utils/Loading';\r\nconst Developers = () => {\r\n\r\n    const [dev, setDev] = useState({ devapi: [] });\r\n    const [loading, setLoading] = useState(false);\r\n    const { devapi: listingData } = dev\r\n\r\n    useEffect(() => {\r\n        devApiData();\r\n    }, [])\r\n\r\n    const devApiData = async () => {\r\n        setLoading(true)\r\n        const response = await new Promise((resolve, reject) => {\r\n            fetch(`${AppUrl.DEVELOPER_LISTING_URL}`)\r\n                .then(resp => resp.json())\r\n                .then(data => {\r\n                    setDev({ devapi: data })\r\n                    setLoading(false)\r\n                })\r\n                .catch(error => {\r\n                    console.log(\"Error:\" + error)\r\n                });\r\n        })\r\n        return response;\r\n    }\r\n    return (\r\n        <>\r\n            <Header\r\n                title=\"Trending\"\r\n                discription=\"These are the developers building the hot tools today.\" />\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col_full\">\r\n                        <div className=\"con_outer\">\r\n                            <Navbarcon />\r\n                            {/* Developers listing section start here */}\r\n                            {loading ? <Loading /> : <Developerslist listingData={listingData} />}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Developers;","import { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport './assets/scss/style.scss';\nimport Repos from './repos/Repos';\nimport Notfound from './notfound/Notfound';\nimport Developers from './developers/Developers';\n\nfunction App() {\n  return (\n    <>\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <Router>\n            <Switch>\n              <Route exact path=\"/repos\" component={Repos} />\n              <Route exact path=\"/developers\" component={Developers} />\n              <Route path=\"/notfound\" component={Notfound} />\n              <Redirect to=\"/notfound\" />\n            </Switch>\n          </Router>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}